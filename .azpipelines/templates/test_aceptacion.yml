steps:

- task: UseDotNet@2
  displayName: '[Test aceptación 1/8]: Instalar SDK .NET'
  inputs:
    packageType: 'sdk'
    version: '7.0.100'

# Descarga de artefactos
- task: DownloadPipelineArtifact@2
  displayName: '[Test aceptación 2/8]: Descarga artefacto Cliente'
  inputs:
    downloadPath: '$(Build.BinariesDirectory)'
    artifact: 'Cliente'

- task: DownloadPipelineArtifact@2
  displayName: '[Test aceptación 3/8]: Descarga artefacto API'
  inputs:
    downloadPath: '$(Build.BinariesDirectory)'
    artifact: 'API'

# Desempaquetar artefactos
- task: PowerShell@2
  displayName: '[Test aceptación 4/8]: Desempaquetar artefacto Cliente'
  inputs:
    targetType: 'inline'
    script: 'Expand-Archive $(Build.BinariesDirectory)/cliente.zip -DestinationPath $(Build.BinariesDirectory)/Cliente'

- task: PowerShell@2
  displayName: '[Test aceptación 5/8]: Desempaquetar artefacto API'
  inputs:
    targetType: 'inline'
    script: 'Expand-Archive $(Build.BinariesDirectory)/API.zip -DestinationPath $(Build.BinariesDirectory)/API'

# Desplegar entorno test
- task: PackerBuild@1
  displayName: '[Test aceptación 6/9]: Crear imagen con Packer'
  inputs:
    templateType: 'custom'
    customTemplateLocation: '.azpipelines/packer/despliegue.json'
    customTemplateParameters: '{
      "SubscriptionId": "$(SubscriptionId)",
      "TenantId": "$(TenantId)",
      "ClientId": "$(ClientId)",
      "ClientSecret": "$(ClientSecret)",
      "ImageName": "DatingApp_$(Build.BuildNumber)",
      "ResourceGroupName": "$(ResourceGroupName)"}'

- task: TerraformInstaller@0
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: 1.5.1

# Smoke test
- task: PowerShell@2
  displayName: '[Test aceptación 8/9]: Smoke test'
  inputs:
    targetType: 'inline'
    script: 'Invoke-WebRequest -URI http://127.0.0.1:8080'

# Test unitarios
- task: DotNetCoreCLI@2
  displayName: '[Test aceptación 9/9]: Ejecución y publicación de los test'
  inputs:
    command: 'test'
    projects: 'API.AcceptanceTests/API.AcceptanceTests.csproj'