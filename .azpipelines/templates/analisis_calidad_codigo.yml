parameters:
- name: language
  type: string
- name: repo
  type: string
  default: 'juanmalm/DatingAppCICD'
- name: codeqlTool
  type: string
  default: '$(Build.SourcesDirectory)/codeql/codeql'
- name: dbRoot
  type: string
  default: '$(Build.SourcesDirectory)/codeql-dbs'
- name: db
  type: string
  default: '$(Build.SourcesDirectory)/codeql-dbs/db'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Invoke-WebRequest -Uri https://github.com/github/codeql-action/releases/latest/download/codeql-bundle-win64.tar.gz -OutFile .\codeql-bundle-win64.tar.gz
      tar -xvzf .\codeql-bundle-win64.tar.gz
  displayName: '[Evaluación y calidad del código 1/4]: Descarga de CodeQL'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      mkdir ${{ parameters.dbRoot }}
      ${{ parameters.codeqlTool }} database create ${{ parameters.db }} --language=${{ parameters.language }} --no-run-unnecessary-builds --source-root .
      ${{ parameters.codeqlTool }} database analyze ${{ parameters.db }} ${{ parameters.language }}-security-and-quality.qls --sarif-category=${{ parameters.language }} --format=sarif-latest --output=${{ parameters.db }}/${{ parameters.language }}-security-and-quality.sarif
  displayName: '[Evaluación y calidad del código 2/4]: Análisis CodeQL'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      ${{ parameters.codeqlTool }} github upload-results --repository=${{ parameters.repo }} --sarif=${{ parameters.db }}/${{ parameters.language }}-security-and-quality.sarif
  env:
    GITHUB_TOKEN: $(ghtoken)
  displayName: '[Evaluación y calidad del código 3/4]: Publicación resultados en GitHub'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '${{ parameters.db }}/${{ parameters.language }}-security-and-quality.sarif'
    artifactName: 'AnalisisCodigo'
  displayName: '[Evaluación y calidad del código 4/4]: Publicación de artefacto de resultados'