parameters:
- name: language
  type: string

variables:
- name: repo
  value: 'juanmalm/DatingAppCICD'
- name: codeqlTool
  value: '$(Build.SourcesDirectory)/codeql/codeql'
- name: dbRoot
  value: '$(Build.SourcesDirectory)/codeql-dbs'
- name: db
  value: '$(dbRoot)/repo-${{ parameters.language }}'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Invoke-WebRequest -Uri https://github.com/github/codeql-action/releases/latest/download/codeql-bundle-win64.tar.gz -OutFile .\codeql-bundle-win64.tar.gz
      tar -xvzf .\codeql-bundle-win64.tar.gz
  displayName: '[Evaluación y calidad del código 1/4]: Descarga de CodeQL'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      mkdir $(dbRoot)
      $(codeql) database create $(db) --language=${{ parameters.language }} --no-run-unnecessary-builds --source-root .
      $(codeql) database analyze $(db) ${{ parameters.language }}-security-and-quality.qls --sarif-category=${{ parameters.language }} --format=sarif-latest --output=$(db)/${{ parameters.language }}-security-and-quality.sarif
  displayName: '[Evaluación y calidad del código 2/4]: Análisis CodeQL'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $(codeql) github upload-results --repository=$(repo) --sarif=$(db)/${{ parameters.language }}-security-and-quality.sarif
  env:
    GITHUB_TOKEN: $(ghtoken)
  displayName: '[Evaluación y calidad del código 3/4]: Publicación resultados en GitHub'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(db)/${{ parameters.language }}-security-and-quality.sarif'
    artifactName: 'AnalisisCodigo'
  displayName: '[Evaluación y calidad del código 4/4]: Publicación de artefacto de resultados'