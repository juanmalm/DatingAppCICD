trigger:
- main

pool:
  vmImage: windows-2022

stages:

# Etapa de commit. Incluye los procesos de compilación, test unitarios, evaluación del código y empaquetado
- stage: Etapa_Commit
  jobs:

  # Job para el cliente en Angular
  - job: Cliente_Angular
    steps:

    # Compilación
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: '[Compilación 1/2]: Instalar Node.js'

    - script: |
        call npm install -g @angular/cli
        call npm install --legacy-peer-deps
        call ng build
      workingDirectory: $(Build.SourcesDirectory)/client
      displayName: '[Compilación 2/2]: Compilación'

    # Test unitarios
    - script: |
        call ng test --no-watch --reporters=junit
        exit 0
      workingDirectory: $(Build.SourcesDirectory)/client
      displayName: '[Test unitarios 1/2]: Ejecución de los test'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '$(Build.SourcesDirectory)/client/test-results.xml'
        failTaskOnFailedTests: true
      displayName: '[Test unitarios 2/2]: Publicación de resultados'

  # Job para el API en .NET
  - job: API_NET
    steps:

    # Evaluación y calidad del código
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Invoke-WebRequest -Uri https://github.com/github/codeql-action/releases/latest/download/codeql-bundle-win64.tar.gz -OutFile .\codeql-bundle-win64.tar.gz
          tar -xvzf .\codeql-bundle-win64.tar.gz
          mkdir ./codeql-dbs
          .\codeql\codeql database init --language csharp --trace-process-name Agent.Worker.exe --source-root API --begin-tracing ./codeql-dbs/api-repo
          $json = Get-Content ./codeql-dbs/api-repo/temp/tracingEnvironment/start-tracing.json | ConvertFrom-Json
          $json.PSObject.Properties | ForEach-Object {
              $template = "##vso[task.setvariable variable="
              $template += $_.Name
              $template += "]"
              $template += $_.Value
              echo "$template"
          }
      displayName: '[Evaluación y calidad del código 1/2]: Inicialización CodeQL'

    # Compilación
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.100'
      displayName: '[Compilación 1/2]: Instalar SDK .NET'

    - task: DotNetCoreCLI@2
      inputs:
        projects: 'API/API.csproj'
      displayName: '[Compilación 2/2]: Compilación'

    # Evaluación y calidad del código
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $json = Get-Content ./codeql-dbs/api-repo/temp/tracingEnvironment/end-tracing.json | ConvertFrom-Json
          $json.PSObject.Properties | ForEach-Object {
              $template = "##vso[task.setvariable variable="
              $template += $_.Name
              $template += "]"
              $template += $_.Value
              echo "$template"
          }
          .\codeql\codeql database finalize ./codeql-dbs/api-repo
          .\codeql\codeql database analyze ./codeql-dbs/api-repo csharp-code-scanning.qls --sarif-category=csharp --format=sarif-latest --output=./codeql-dbs/api-repo/temp/api-repo-csharp.sarif
          echo "$(ghtoken)" | .\codeql\codeql github upload-results --repository=juanmalm/DatingAppCICD --ref=refs/heads/main --sarif=./codeql-dbs/api-repo/temp/api-repo-csharp.sarif --github-auth-stdin
      displayName: '[Evaluación y calidad del código 2/2]: Análisis CodeQL'

    # Test unitarios
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'API.UnitTests/API.UnitTests.csproj'
      displayName: '[Test unitarios 1/1]: Ejecución y publicación de los test'